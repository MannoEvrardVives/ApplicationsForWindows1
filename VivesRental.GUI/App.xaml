<Application 
    x:Class="VivesRental.GUI.App" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    StartupUri="MainWindow.xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    d1p1:Ignorable="d" 
    xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:VivesRental.GUI.ViewModels"
    xmlns:views="clr-namespace:VivesRental.GUI.Views">
    <Application.Resources>
      <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />
        <DataTemplate DataType="{x:Type vm:UserViewModel}">
          <views:UserView />
      </DataTemplate>
      <DataTemplate DataType="{x:Type vm:DashboardViewModel}">
          <views:DashboardView />
      </DataTemplate>
      <DataTemplate DataType="{x:Type vm:NewRentalViewModel}">
          <views:NewRentalView />
      </DataTemplate>
      <DataTemplate DataType="{x:Type vm:ItemsManagementViewModel}">
          <views:ItemsManagementView />
      </DataTemplate>
      <DataTemplate DataType="{x:Type vm:NewItemViewModel}">
          <views:NewItemView />
      </DataTemplate>
      <DataTemplate DataType="{x:Type vm:RentalOrdersViewModel}">
          <views:RentalOrdersView />
      </DataTemplate>
      <DataTemplate DataType="{x:Type vm:RentalOrderDetailsViewModel}">
          <views:RentalOrderDetailsView />
      </DataTemplate>
      <DataTemplate DataType="{x:Type vm:UsersViewModel}">
          <views:UsersView />
      </DataTemplate>

        <ControlTemplate x:Key="RoundedButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" 
                    CornerRadius="5" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#D0D0D0"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#D0D0D0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                  x:Name="Bd" BorderBrush="#D0D0D0"
                  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
              <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                  <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                  <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                  <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


    </Application.Resources>
</Application>

